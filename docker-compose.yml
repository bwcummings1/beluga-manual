version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    depends_on:
      - api
    networks:
      - beluga-network
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.api
    ports:
      - "4000:4000"
    env_file:
      - .env.production
    depends_on:
      - db
      - redis
      - deepclaude
    networks:
      - beluga-network
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  deepclaude:
    build:
      context: ./deepclaude
      dockerfile: Dockerfile.deepclaude
    ports:
      - "8080:8080"
    env_file:
      - .env.production
    networks:
      - beluga-network
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  db:
    image: postgres:13
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: beluga
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - beluga-network
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  redis:
    image: redis:6-alpine
    volumes:
      - redis-data:/data
    networks:
      - beluga-network
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - api
      - deepclaude
    networks:
      - beluga-network
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  prometheus:
    image: prom/prometheus:v2.30.3
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - beluga-network
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  alertmanager:
    image: prom/alertmanager:v0.23.0
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    networks:
      - beluga-network
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  grafana:
    image: grafana/grafana:8.2.2
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - beluga-network
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "10"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - beluga-network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - beluga-network
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - beluga-network
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.14.0
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - beluga-network
    depends_on:
      - elasticsearch
      - logstash

networks:
  beluga-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data:
  elasticsearch-data:

